@if (CurrentChoices != null)
{
    <div class="row py-3">
        <ul class="list-group">
            @foreach (var choice in CurrentChoices)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    @choice.Name
                    <div class=" px-3">
                        <span class="badge badge-primary badge-pill">@choice.Weighting</span>
                    </div>
                    <button @onclick="@(() => OnRemoveChoice.InvokeAsync(choice))" class="badge badge-pill badge-danger btn shadow-none">Remove</button>
                </li>
            }
        </ul>
    </div>
}

<div class="row">
    <input placeholder="Choice" @bind="newChoice" />
    <input placeholder="Weighting" @bind="newChoiceWeighting" />
    <button @onclick="AddNewChoice" type="button" class="btn btn-success px-5 search-submit">Add</button>
</div>

@code {
    private string newChoice;
    private int? newChoiceWeighting;

    [Parameter]
    public IList<Choice> CurrentChoices { get; set; } = new List<Choice>();

    [Parameter]
    public EventCallback<Choice> OnAddChoice { get; set; }

    [Parameter]
    public EventCallback<Choice> OnRemoveChoice { get; set; }

    private async Task AddNewChoice()
    {
        var choice = new Choice { Name = newChoice, Weighting = newChoiceWeighting ?? 0 };
        newChoice = "";
        newChoiceWeighting = null;

        await OnAddChoice.InvokeAsync(choice);
    }
}